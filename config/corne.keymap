#include "zmk-helpers/helper.h"
#include "mouse.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    tapping-term-ms = <350>;
    flavor = "balanced";
    quick-tap-ms = <200>;
};

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        bt_connect_clear_0: bt_connect_clear_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_CONNECT_CLEAR_0";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0>, <&bt BT_DISC 0>;

            tapping-term-ms = <200>;
        };

        bt_connect_clear_1: bt_connect_clear_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_CONNECT_CLEAR_1";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1>, <&bt BT_DISC 1>;

            tapping-term-ms = <200>;
        };

        bt_connect_clear_2: bt_connect_clear_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_CONNECT_CLEAR_2";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2>, <&bt BT_DISC 2>;

            tapping-term-ms = <200>;
        };

        bt_connect_clear_3: bt_connect_clear_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_CONNECT_CLEAR_3";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3>, <&bt BT_DISC 3>;

            tapping-term-ms = <200>;
        };

        bt_connect_clear_4: bt_connect_clear_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_CONNECT_CLEAR_4";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4>, <&bt BT_DISC 4>;

            tapping-term-ms = <200>;
        };

        hold_layer_tap_layer: hold_layer_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LAYER_TAP_LAYER";
            bindings = <&held_layer>, <&tappd_layer>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    macros {
        held_layer: held_layer {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&rgb_ug RGB_ON &rgb_ug RGB_COLOR_HSB(0,0,100)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&rgb_ug RGB_OFF>,
                <&macro_tap>,
                <&rgb_ug RGB_OFF>;

            label = "HELD_LAYER";
        };

        tappd_layer: tappd_layer {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &to MACRO_PLACEHOLDER &rgb_ug RGB_ON &rgb_ug RGB_COLOR_HSB(203,100,50)>,
                <&macro_wait_time 2000>,
                <&rgb_ug RGB_OFF>;

            label = "TAPPD_LAYER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
  &kp Q             &kp W        &kp F                &kp P                      &kp G                        &kp J        &kp L      &kp U            &kp Y        &kp SEMI
  &mt LEFT_SHIFT A  &mt LCTRL R  &mt LEFT_ALT S       &kp T                      &kp D                        &kp H        &kp N      &mt RIGHT_ALT E  &mt RCTRL I  &mt RSHIFT O
  &kp Z             &kp X        &kp C                &kp V                      &kp B                        &kp K        &kp M      &kp COMMA        &kp PERIOD   &kp SLASH
                                 &mt LEFT_GUI DELETE  &hold_layer_tap_layer 2 4  &hold_layer_tap_layer 1 3    &lt 1 SPACE  &kp ENTER  &kp BACKSPACE
            >;
        };

        Sym {
            bindings = <
  &kp ESCAPE  &none        &none       &none          &none              &kp GRAVE          &none             &none              &none                 &none
  &kp CARET   &kp PERCENT  &kp DOLLAR  &kp AMPERSAND  &kp EXCLAMATION    &kp DOUBLE_QUOTES  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
  &kp TILDE   &kp HASH     &kp PIPE    &kp AT_SIGN    &kp UNDERSCORE     &kp SINGLE_QUOTE   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LESS_THAN         &kp GREATER_THAN
                           &none       &none          &none              &none              &none             &none
            >;
        };

        Num {
            bindings = <
  &bt_connect_clear_0  &bt_connect_clear_1  &bt_connect_clear_2  &bt_connect_clear_3  &bt_connect_clear_4    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_DIVIDE  &kp KP_MULTIPLY
  &out OUT_TOG         &none                &none                &none                &none                  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS   &none
  &bt BT_CLR_ALL       &none                &none                &none                &none                  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS    &none
                                            &none                &none                &none                  &kp KP_ENTER     &kp KP_NUMBER_0  &none
            >;
        };

        Nav {
            bindings = <
  &none      &none         &kp UP_ARROW  &none      &none    &msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &none
  &none      &kp LEFT      &kp DOWN      &kp RIGHT  &none    &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none
  &kp LCTRL  &kp LEFT_ALT  &none         &none      &none    &none           &none           &none           &none            &none
                           &none         &none      &to 0    &mkp LCLK       &mkp MCLK       &mkp RCLK
            >;
        };

        Func {
            bindings = <
  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5     &none   &kp C_PREV            &kp C_PLAY_PAUSE          &kp C_NEXT            &none
  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10    &trans  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP           &kp C_MUTE            &trans
  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15    &trans  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_MINIMUM  &kp C_BRIGHTNESS_INC  &trans
                    &trans   &trans   &trans     &trans  &to 0                 &trans
            >;
        };
    };
};
