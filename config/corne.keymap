#include "zmk-helpers/helper.h"
#include "mouse.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>


/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        hold_shift_or_caps_lock_or_mod: hold_shift_or_caps_lock_or_mod {
            compatible = "zmk,behavior-tap-dance";
            label = "HOLD_SHIFT_OR_CAPS_LOCK_OR_MOD";
            #binding-cells = <0>;
            bindings = <&mt LEFT_SHIFT CAPSLOCK>, <&kp LGUI>;
        };

        hold_layer_or_tab_or_switch_lyr: hold_layer_or_tab_or_switch_lyr {
            compatible = "zmk,behavior-tap-dance";
            label = "HOLD_LAYER_OR_TAB_OR_SWITCH_LYR";
            #binding-cells = <0>;
            bindings = <&lt 1 TAB>, <&to 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
  &kp Q        &kp W           &kp F          &kp P                            &kp G                               &kp J        &kp L      &kp U       &kp Y    &kp SEMI
  &kp A        &kp R           &kp S          &kp T                            &kp D                               &kp H        &kp N      &kp E       &kp I    &kp O
  &mt LCTRL Z  &mt LEFT_ALT X  &kp C          &kp V                            &kp B                               &kp K        &kp M      &kp COMMA   &mt RIGHT_ALT DOT  &mt RCTRL FSLH
                               &kp BACKSPACE  &hold_shift_or_caps_lock_or_mod  &hold_layer_or_tab_or_switch_lyr    &lt 1 ENTER  &kp SPACE  &kp DELETE
            >;
        };

        Sym {
            bindings = <
  &kp ESCAPE  &none        &none       &none          &none              &kp GRAVE          &none             &none              &none                 &none
  &kp CARET   &kp PERCENT  &kp DOLLAR  &kp AMPERSAND  &kp EXCLAMATION    &kp DOUBLE_QUOTES  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
  &kp TILDE   &kp HASH     &kp PIPE    &kp AT_SIGN    &kp UNDERSCORE     &kp SINGLE_QUOTE   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LESS_THAN         &kp GREATER_THAN
                           &none       &none          &none              &none              &none             &none
            >;
        };

        Num {
            bindings = <
  &none  &none  &none  &none  &out OUT_TOG    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_DIVIDE  &kp KP_MULTIPLY
  &none  &none  &none  &none  &none           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS   &none
  &none  &none  &none  &none  &none           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS    &none
                &none  &none  &none           &kp KP_ENTER     &kp KP_NUMBER_0  &none
            >;
        };

        Nav {
            bindings = <
  &none  &none     &kp UP_ARROW  &none      &none     &msc SCROLL_UP    &msc SCROLL_LEFT  &mmv MOVE_UP    &msc SCROLL_RIGHT  &none
  &none  &kp LEFT  &kp DOWN      &kp RIGHT  &none     &msc SCROLL_DOWN  &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &none
  &none  &none     &none         &none      &none     &none             &none             &none           &none              &none
                   &none         &none      &tog 0    &mkp MCLK         &mkp LCLK         &mkp RCLK
            >;
        };
    };
};